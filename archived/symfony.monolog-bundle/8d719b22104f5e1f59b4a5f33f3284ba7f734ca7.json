{
    "manifests": {
        "symfony/monolog-bundle": {
            "manifest": {
                "bundles": {
                    "Symfony\\Bundle\\MonologBundle\\MonologBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/"
                },
                "conflict": {
                    "symfony/framework-bundle": "<5.3"
                }
            },
            "files": {
                "config/packages/monolog.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;",
                        "",
                        "return static function (ContainerConfigurator $containerConfigurator): void {",
                        "    $containerConfigurator->extension('monolog', [",
                        "        'channels' => [",
                        "            'deprecation',",
                        "        ],",
                        "    ]);",
                        "",
                        "    if ('dev' === $containerConfigurator->env()) {",
                        "        $containerConfigurator->extension('monolog', [",
                        "            'handlers' => [",
                        "                'main' => [",
                        "                    'type' => 'stream',",
                        "                    'path' => '%kernel.logs_dir%/%kernel.environment%.log',",
                        "                    'level' => 'debug',",
                        "                    'channels' => ['!event'],",
                        "                ],",
                        "                'console' => [",
                        "                    'type' => 'console',",
                        "                    'process_psr_3_messages' => false,",
                        "                    'channels' => ['!event', '!doctrine', '!console'],",
                        "                ],",
                        "            ],",
                        "        ]);",
                        "    }",
                        "",
                        "    if ('test' === $containerConfigurator->env()) {",
                        "        $containerConfigurator->extension('monolog', [",
                        "            'handlers' => [",
                        "                'main' => [",
                        "                    'type' => 'fingers_crossed',",
                        "                    'action_level' => 'error',",
                        "                    'handler' => 'nested',",
                        "                    'excluded_http_codes' => [404, 405],",
                        "                    'channels' => ['!event'],",
                        "                ],",
                        "                'nested' => [",
                        "                    'type' => 'stream',",
                        "                    'path' => '%kernel.logs_dir%/%kernel.environment%.log',",
                        "                    'level' => 'debug',",
                        "                ],",
                        "            ],",
                        "        ]);",
                        "    }",
                        "",
                        "    if ('prod' === $containerConfigurator->env()) {",
                        "        $containerConfigurator->extension('monolog', [",
                        "            'handlers' => [",
                        "                'main' => [",
                        "                    'type' => 'fingers_crossed',",
                        "                    'action_level' => 'error',",
                        "                    'handler' => 'nested',",
                        "                    'excluded_http_codes' => [404, 405],",
                        "                    'buffer_size' => 50, # How many messages should be saved? Prevent memory leaks",
                        "                ],",
                        "                'nested' => [",
                        "                    'type' => 'stream',",
                        "                    'path' => '%kernel.logs_dir%/%kernel.environment%.log',",
                        "                    'level' => 'debug',",
                        "                    'formatter' => 'monolog.formatter.json',",
                        "                ],",
                        "                'console' => [",
                        "                    'type' => 'console',",
                        "                    'process_psr_3_messages' => false,",
                        "                    'channels' => ['!event', '!doctrine'],",
                        "                ],",
                        "                'deprecation' => [",
                        "                    'type' => 'stream',",
                        "                    'channels' => ['deprecation'],",
                        "                    'path' => 'php://stderr',",
                        "                    'formatter' => 'monolog.formatter.json',",
                        "                ],",
                        "            ],",
                        "        ]);",
                        "    }",
                        "};",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "8d719b22104f5e1f59b4a5f33f3284ba7f734ca7"
        }
    }
}

{
    "manifests": {
        "symfony/security-bundle": {
            "manifest": {
                "bundles": {
                    "Symfony\\Bundle\\SecurityBundle\\SecurityBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/"
                },
                "conflict": {
                    "symfony/framework-bundle": "<5.3"
                }
            },
            "files": {
                "config/packages/security.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface;",
                        "use Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;",
                        "",
                        "return static function (ContainerConfigurator $containerConfigurator): void {",
                        "    $parameters = $containerConfigurator->parameters();",
                        "",
                        "    $parameters->set('secret', '%env(resolve:APP_SECRET)%');",
                        "",
                        "    $containerConfigurator->extension('security', [",
                        "        # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords",
                        "        'password_hashers' => [",
                        "            PasswordAuthenticatedUserInterface::class => 'auto',",
                        "        ],",
                        "",
                        "        # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider",
                        "        'providers' => [",
                        "            'users_in_memory' => [",
                        "                'memory' => null,",
                        "            ],",
                        "        ],",
                        "",
                        "        'firewalls' => [",
                        "            'dev' => [",
                        "                'pattern' => '^/(_(profiler|wdt)|css|images|js)/',",
                        "                'security' => false,",
                        "            ],",
                        "            'main' => [",
                        "                'lazy' => true,",
                        "                'provider' => 'users_in_memory',",
                        "",
                        "                # activate different ways to authenticate",
                        "                # https://symfony.com/doc/current/security.html#the-firewall",
                        "",
                        "                # https://symfony.com/doc/current/security/impersonating_user.html",
                        "                # 'switch_user' => true,",
                        "            ]",
                        "        ],",
                        "",
                        "        # Easy way to control access for large sections of your site",
                        "        # Note: Only the *first* access control that matches will be used",
                        "        'access_control' => [",
                        "            # ['path' => '^/admin', 'role' => 'ROLE_ADMIN'],",
                        "            # ['path' => '^/admin/login', 'role' => 'PUBLIC_ACCESS'],",
                        "            # ['path' => '^/profile', 'role' => 'ROLE_USER'],",
                        "        ],",
                        "    ]);",
                        "",
                        "    if ('test' === $containerConfigurator->env()) {",
                        "        $containerConfigurator->extension('security', [",
                        "            'password_hashers' => [",
                        "                # By default, password hashers are resource intensive and take time. This is",
                        "                # important to generate secure password hashes. In tests however, secure hashes",
                        "                # are not important, waste resources and increase test times. The following",
                        "                # reduces the work factor to the lowest possible values.",
                        "                PasswordAuthenticatedUserInterface::class => [",
                        "                    'algorithm' => 'auto',",
                        "                    'cost' => 4, # Lowest possible value for bcrypt",
                        "                    'time_cost' => 3, # Lowest possible value for argon",
                        "                    'memory_cost' => 10, # Lowest possible value for argon",
                        "                ],",
                        "            ],",
                        "        ]);",
                        "    }",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/security.php": {
                    "contents": [
                        "<?php\r",
                        "\r",
                        "declare(strict_types=1);\r",
                        "\r",
                        "use Symfony\\Component\\Routing\\Loader\\Configurator\\RoutingConfigurator;\r",
                        "\r",
                        "return static function (RoutingConfigurator $routingConfigurator): void {\r",
                        "    $routingConfigurator\r",
                        "        ->import('security.route_loader.logout', 'service')\r",
                        "    ;\r",
                        "};\r",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "38191046d1b05e1fa6cf3687a79134278d847725"
        }
    }
}
